// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator pothos {
  provider = "prisma-pothos-types"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model User {
  id String @id @default(uuid())
  first_name String
  last_name String
  email String @unique
  password String
  role Role @default(USER)
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  requests Request[]
}

enum Role {
  USER
  ADMIN
}

model Tag {
  id String @id @default(uuid())
  name String @unique
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  contributors Contributor[]
  requests Request[]
}

model Contributor {
  id String @id @default(uuid())
  first_name String
  last_name String
  email String?
  telegram_chat_id BigInt?
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  username String?
  telegram_id BigInt?
  note String?
  zip_code String?
  city String?
  phone String?
  deactivated_at DateTime?
  threema_id String?
  data_processing_consented_at DateTime?
  telegram_onboarding_token String?
  signal_phone_number String?
  signal_onboarding_completed_at DateTime?
  additional_email String?
  additional_consent_given_at DateTime?
  organization_id String?
  whats_app_phone_number String?
  whats_app_message_template_responded_at DateTime?
  deactivated_by_user_id String?
  deactivated_by_admin Boolean @default(false)
  whats_app_message_template_sent_at DateTime?
  unsubscribed_at DateTime?
  tags Tag[]
}

model Request {
  id String @id @default(uuid())
  title String
  text String?
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  user User @relation(fields: [user_id], references: [id])
  user_id String
  schedule_send_for DateTime
  broadcasted_at DateTime?
  tags Tag[]
}
